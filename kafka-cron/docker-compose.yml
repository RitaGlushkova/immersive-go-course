version: "2.1"

# volumes:
#   prometheus_data: {}
#   grafana_data: {}

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zoo1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:29092"
    depends_on:
      - "kafka1"

  # producer:
  #   build:
  #     context: .
  #     dockerfile: ./producer/Dockerfile
  #   depends_on:
  #     - kafka1
  #   volumes:
  #     - ./producer/cronfile.txt:/cronfile.txt
  #   command: ["/build", "--broker", "kafka1:29092"]

  # cluster-a:
  #   depends_on:
  #     - kafka1
  #   build:
  #     context: .
  #     dockerfile: ./consumer/Dockerfile
  #   command:
  #     [
  #       "/build",
  #       "--broker",
  #       "kafka1:29092",
  #       "--topic",
  #       "test_topic",
  #       "--group",
  #       "cluster-a",
  #     ]

  # cluster-b:
  #   depends_on:
  #     - kafka1
  #   build:
  #     context: .
  #     dockerfile: ./consumer/Dockerfile
  #   command:
  #     [
  #       "/build",
  #       "--broker",
  #       "kafka1:29092",
  #       "--topic",
  #       "my_topic",
  #       "--group",
  #       "cluster-b",
  #     ]

  # alertmanager:
  #   container_name: alertmanager
  #   hostname: alertmanager
  #   image: prom/alertmanager
  #   volumes:
  #     - ./alertmanager.conf:/etc/alertmanager/alertmanager.conf
  #   command:
  #     - "--config.file=/etc/alertmanager/alertmanager.conf"
  #   ports:
  #     - 9093:9093

  # prometheus:
  #   container_name: prometheus
  #   hostname: prometheus
  #   image: prom/prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #   links:
  #     - alertmanager:alertmanager
  #   ports:
  #     - 9090:9090

  # grafana:
  #   container_name: grafana
  #   hostname: grafana
  #   image: grafana/grafana
  #   volumes:
  #     - ./grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
  #     - ./grafana_config.ini:/etc/grafana/config.ini
  #     - grafana_data:/var/lib/grafana
  #   ports:
  #     - 3000:3000
